# 구름이는 주식을 사고 팔려고 한다. 주식에 능통한 구름이는 1일부터 N일까지 총 N일 동안의 주식의 가격을 정확히 예측할 수 있다.

# 구름이는 정확히 한 종목의 주식만을 사고 팔려고 한다. 구름이가 사고 팔려는 종목의 주식은 아래와 같은 특성이 있다.

# - 주식의 가격은 하루에 한번, 매일 자정에 변한다.
# - 하루에 최대 한 주의 주식만을 사거나, 팔 수 있다. 아무런 행동을 하지 않을 수도 있다. 단 주식을 산 당일에 팔 수는 없다.

# 구름이는 1일부터 N일까지 총 N일 동안 자유롭게 주식을 사고 팔려고 한다. 이때 구름이가 얻을 수 있는 이익은 주식을 판 가격의 합에서 주식을 산 가격의 합을 뺀 값이다. 
# 초기에 구름이가 가지고 있는 주식은 없다. 구름이가 얻을 수 있는 이익의 최댓값을 구해보자.

# 입력 첫째 줄에 정수 N이 주어진다.

# 둘째 줄에 a1…….a(N)이 공백을 두고 주어진다. a(i)는 구름이가 사고 팔려는 종목의 주식의 i일 가격을 의미한다.

# - 1 ≤ N ≤ 2000
# - 1 ≤ a(i) ≤ 100000
# - 입력에서 주어지는 모든 수는 정수이다

# 출력

# 예시1
# 입력
# 5
# 1 3 2 8 5

# 출력
# 10

# 예시2

# 입력
# 1 2 3 4 5 6 7 8 9 10

# 출력
# 25


def solution(prices):
    
    prices.sort()
    max_cost = 0
    
    buying = 1
    selling = 1
    
    print(prices[:1])
    
    while buying <= (len(prices)-selling):
        max_cost = max(max_cost,sum(prices[-selling::])-sum(prices[:buying]))
        buying += 1
        selling += 1
    
    return max_cost

print(solution([1,3,2,8,5]))
print(solution([1,2,3,4,5,6,7,8,9,10]))

# 5
# 1 3 2 8 5